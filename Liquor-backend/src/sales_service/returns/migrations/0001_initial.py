# Generated by Django 4.2.10 on 2025-03-25 16:59

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sales", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Return",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                (
                    "return_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="return number"
                    ),
                ),
                ("return_date", models.DateTimeField(verbose_name="return date")),
                (
                    "original_invoice_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="original invoice number",
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="customer name"
                    ),
                ),
                (
                    "customer_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="customer phone"
                    ),
                ),
                (
                    "return_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Return"),
                            ("partial", "Partial Return"),
                        ],
                        default="partial",
                        max_length=20,
                        verbose_name="return type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="subtotal"
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="tax amount",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total amount"
                    ),
                ),
                (
                    "refund_method",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("upi", "UPI"),
                            ("card", "Card"),
                            ("credit", "Credit"),
                            ("exchange", "Exchange"),
                        ],
                        default="cash",
                        max_length=20,
                        verbose_name="refund method",
                    ),
                ),
                (
                    "refund_reference",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="refund reference"
                    ),
                ),
                (
                    "refund_details",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="refund details"
                    ),
                ),
                ("reason", models.TextField(verbose_name="reason")),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                ("created_by", models.UUIDField(verbose_name="created by")),
                (
                    "approved_by",
                    models.UUIDField(blank=True, null=True, verbose_name="approved by"),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="approved at"
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="rejection reason"),
                ),
                (
                    "is_synced",
                    models.BooleanField(default=True, verbose_name="is synced"),
                ),
                (
                    "sync_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="sync ID"
                    ),
                ),
                (
                    "sale",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="returns",
                        to="sales.sale",
                    ),
                ),
            ],
            options={
                "verbose_name": "return",
                "verbose_name_plural": "returns",
                "ordering": ["-return_date"],
            },
        ),
        migrations.CreateModel(
            name="ReturnItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                ("product_id", models.UUIDField(verbose_name="product ID")),
                (
                    "product_name",
                    models.CharField(max_length=200, verbose_name="product name"),
                ),
                (
                    "product_code",
                    models.CharField(max_length=50, verbose_name="product code"),
                ),
                (
                    "product_barcode",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="product barcode"
                    ),
                ),
                (
                    "variant_id",
                    models.UUIDField(blank=True, null=True, verbose_name="variant ID"),
                ),
                (
                    "variant_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="variant name"
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="quantity"
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="unit price"
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="tax rate",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="tax amount",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total amount"
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("defective", "Defective"),
                            ("damaged", "Damaged"),
                            ("wrong_item", "Wrong Item"),
                            ("customer_dissatisfied", "Customer Dissatisfied"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                        verbose_name="reason",
                    ),
                ),
                (
                    "reason_details",
                    models.TextField(blank=True, verbose_name="reason details"),
                ),
                (
                    "return_transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="returns.return",
                    ),
                ),
                (
                    "sale_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="return_items",
                        to="sales.saleitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "return item",
                "verbose_name_plural": "return items",
                "ordering": ["product_name"],
            },
        ),
        migrations.CreateModel(
            name="ReturnExchange",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                ("product_id", models.UUIDField(verbose_name="product ID")),
                (
                    "product_name",
                    models.CharField(max_length=200, verbose_name="product name"),
                ),
                (
                    "product_code",
                    models.CharField(max_length=50, verbose_name="product code"),
                ),
                (
                    "product_barcode",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="product barcode"
                    ),
                ),
                (
                    "variant_id",
                    models.UUIDField(blank=True, null=True, verbose_name="variant ID"),
                ),
                (
                    "variant_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="variant name"
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="quantity"
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="unit price"
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="tax rate",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="tax amount",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total amount"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "return_transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exchanges",
                        to="returns.return",
                    ),
                ),
            ],
            options={
                "verbose_name": "return exchange",
                "verbose_name_plural": "return exchanges",
                "ordering": ["product_name"],
            },
        ),
        migrations.AddIndex(
            model_name="return",
            index=models.Index(
                fields=["tenant_id", "shop_id", "return_date"],
                name="returns_ret_tenant__a6841d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="return",
            index=models.Index(
                fields=["tenant_id", "shop_id", "status"],
                name="returns_ret_tenant__d91dda_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="return",
            index=models.Index(
                fields=["tenant_id", "shop_id", "created_by"],
                name="returns_ret_tenant__7cdf59_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="return",
            index=models.Index(
                fields=["return_number"], name="returns_ret_return__576d2b_idx"
            ),
        ),
    ]
