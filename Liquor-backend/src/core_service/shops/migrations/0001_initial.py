# Generated by Django 4.2.10 on 2025-03-25 16:51

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Shop",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("code", models.CharField(max_length=20, verbose_name="code")),
                ("address", models.TextField(blank=True, verbose_name="address")),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="city"),
                ),
                (
                    "state",
                    models.CharField(blank=True, max_length=100, verbose_name="state"),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="country"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="postal code"
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="phone"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="email"),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="longitude",
                    ),
                ),
                (
                    "license_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="license number"
                    ),
                ),
                (
                    "license_expiry",
                    models.DateField(
                        blank=True, null=True, verbose_name="license expiry"
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(blank=True, max_length=50, verbose_name="tax ID"),
                ),
                (
                    "manager_id",
                    models.UUIDField(blank=True, null=True, verbose_name="manager ID"),
                ),
                (
                    "manager_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="manager name"
                    ),
                ),
                (
                    "manager_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="manager phone"
                    ),
                ),
                (
                    "manager_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="manager email"
                    ),
                ),
                ("is_open", models.BooleanField(default=True, verbose_name="is open")),
            ],
            options={
                "verbose_name": "shop",
                "verbose_name_plural": "shops",
                "ordering": ["name"],
                "unique_together": {("tenant_id", "code")},
            },
        ),
        migrations.CreateModel(
            name="ShopSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                (
                    "enable_low_stock_alerts",
                    models.BooleanField(
                        default=True, verbose_name="enable low stock alerts"
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.PositiveIntegerField(
                        default=10, verbose_name="low stock threshold"
                    ),
                ),
                (
                    "enable_expiry_alerts",
                    models.BooleanField(
                        default=True, verbose_name="enable expiry alerts"
                    ),
                ),
                (
                    "expiry_alert_days",
                    models.PositiveIntegerField(
                        default=30, verbose_name="expiry alert days"
                    ),
                ),
                (
                    "default_tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="default tax rate",
                    ),
                ),
                (
                    "enable_discounts",
                    models.BooleanField(default=True, verbose_name="enable discounts"),
                ),
                (
                    "max_discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=10,
                        max_digits=5,
                        verbose_name="max discount percentage",
                    ),
                ),
                (
                    "require_discount_approval",
                    models.BooleanField(
                        default=True, verbose_name="require discount approval"
                    ),
                ),
                (
                    "discount_approval_threshold",
                    models.DecimalField(
                        decimal_places=2,
                        default=5,
                        max_digits=5,
                        verbose_name="discount approval threshold",
                    ),
                ),
                (
                    "receipt_header",
                    models.TextField(blank=True, verbose_name="receipt header"),
                ),
                (
                    "receipt_footer",
                    models.TextField(blank=True, verbose_name="receipt footer"),
                ),
                (
                    "show_tax_on_receipt",
                    models.BooleanField(
                        default=True, verbose_name="show tax on receipt"
                    ),
                ),
                (
                    "enable_cash_management",
                    models.BooleanField(
                        default=True, verbose_name="enable cash management"
                    ),
                ),
                (
                    "require_cash_verification",
                    models.BooleanField(
                        default=True, verbose_name="require cash verification"
                    ),
                ),
                (
                    "shop",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="shops.shop",
                    ),
                ),
            ],
            options={
                "verbose_name": "shop settings",
                "verbose_name_plural": "shop settings",
            },
        ),
        migrations.CreateModel(
            name="ShopOperatingHours",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                (
                    "day_of_week",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Monday"),
                            (1, "Tuesday"),
                            (2, "Wednesday"),
                            (3, "Thursday"),
                            (4, "Friday"),
                            (5, "Saturday"),
                            (6, "Sunday"),
                        ],
                        verbose_name="day of week",
                    ),
                ),
                ("opening_time", models.TimeField(verbose_name="opening time")),
                ("closing_time", models.TimeField(verbose_name="closing time")),
                (
                    "is_closed",
                    models.BooleanField(default=False, verbose_name="is closed"),
                ),
                (
                    "shop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="operating_hours",
                        to="shops.shop",
                    ),
                ),
            ],
            options={
                "verbose_name": "shop operating hours",
                "verbose_name_plural": "shop operating hours",
                "ordering": ["day_of_week", "opening_time"],
                "unique_together": {("shop", "day_of_week")},
            },
        ),
        migrations.CreateModel(
            name="ShopHoliday",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("date", models.DateField(verbose_name="date")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "shop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="holidays",
                        to="shops.shop",
                    ),
                ),
            ],
            options={
                "verbose_name": "shop holiday",
                "verbose_name_plural": "shop holidays",
                "ordering": ["date"],
                "unique_together": {("shop", "date")},
            },
        ),
    ]
