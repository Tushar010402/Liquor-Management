# Generated by Django 4.2.10 on 2025-03-25 16:51

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="slug"),
                ),
                ("address", models.TextField(blank=True, verbose_name="address")),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="city"),
                ),
                (
                    "state",
                    models.CharField(blank=True, max_length=100, verbose_name="state"),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="country"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="postal code"
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="phone"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="email"),
                ),
                ("website", models.URLField(blank=True, verbose_name="website")),
                (
                    "business_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="business type"
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(blank=True, max_length=50, verbose_name="tax ID"),
                ),
                (
                    "license_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="license number"
                    ),
                ),
                (
                    "license_expiry",
                    models.DateField(
                        blank=True, null=True, verbose_name="license expiry"
                    ),
                ),
                (
                    "subscription_plan",
                    models.CharField(
                        default="basic", max_length=50, verbose_name="subscription plan"
                    ),
                ),
                (
                    "subscription_start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="subscription start date"
                    ),
                ),
                (
                    "subscription_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="subscription end date"
                    ),
                ),
                (
                    "max_shops",
                    models.PositiveIntegerField(
                        default=1, verbose_name="maximum shops"
                    ),
                ),
                (
                    "max_users",
                    models.PositiveIntegerField(
                        default=5, verbose_name="maximum users"
                    ),
                ),
                (
                    "contact_person_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="contact person name"
                    ),
                ),
                (
                    "contact_person_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="contact person email"
                    ),
                ),
                (
                    "contact_person_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="contact person phone"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="tenant_logos/",
                        verbose_name="logo",
                    ),
                ),
                (
                    "primary_color",
                    models.CharField(
                        default="#4a6da7", max_length=7, verbose_name="primary color"
                    ),
                ),
                (
                    "secondary_color",
                    models.CharField(
                        default="#ffffff", max_length=7, verbose_name="secondary color"
                    ),
                ),
            ],
            options={
                "verbose_name": "tenant",
                "verbose_name_plural": "tenants",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TenantSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", max_length=50, verbose_name="timezone"
                    ),
                ),
                (
                    "date_format",
                    models.CharField(
                        default="YYYY-MM-DD", max_length=20, verbose_name="date format"
                    ),
                ),
                (
                    "time_format",
                    models.CharField(
                        default="HH:mm:ss", max_length=20, verbose_name="time format"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en-US", max_length=10, verbose_name="language"
                    ),
                ),
                (
                    "fiscal_year_start",
                    models.CharField(
                        default="01-01", max_length=5, verbose_name="fiscal year start"
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="tax rate",
                    ),
                ),
                (
                    "enable_tax",
                    models.BooleanField(default=True, verbose_name="enable tax"),
                ),
                (
                    "require_2fa",
                    models.BooleanField(default=False, verbose_name="require 2FA"),
                ),
                (
                    "password_expiry_days",
                    models.PositiveIntegerField(
                        default=90, verbose_name="password expiry days"
                    ),
                ),
                (
                    "session_timeout_minutes",
                    models.PositiveIntegerField(
                        default=30, verbose_name="session timeout minutes"
                    ),
                ),
                (
                    "enable_email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="enable email notifications"
                    ),
                ),
                (
                    "enable_sms_notifications",
                    models.BooleanField(
                        default=False, verbose_name="enable SMS notifications"
                    ),
                ),
                (
                    "require_sales_approval",
                    models.BooleanField(
                        default=True, verbose_name="require sales approval"
                    ),
                ),
                (
                    "require_purchase_approval",
                    models.BooleanField(
                        default=True, verbose_name="require purchase approval"
                    ),
                ),
                (
                    "require_expense_approval",
                    models.BooleanField(
                        default=True, verbose_name="require expense approval"
                    ),
                ),
                (
                    "enable_inventory_management",
                    models.BooleanField(
                        default=True, verbose_name="enable inventory management"
                    ),
                ),
                (
                    "enable_financial_management",
                    models.BooleanField(
                        default=True, verbose_name="enable financial management"
                    ),
                ),
                (
                    "enable_reports",
                    models.BooleanField(default=True, verbose_name="enable reports"),
                ),
                (
                    "enable_analytics",
                    models.BooleanField(default=True, verbose_name="enable analytics"),
                ),
                (
                    "tenant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "tenant settings",
                "verbose_name_plural": "tenant settings",
            },
        ),
    ]
