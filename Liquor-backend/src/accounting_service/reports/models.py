import uuid
from django.db import models
from django.utils.translation import gettext_lazy as _
from common.models import TenantAwareModel
from accounts.models import FiscalYear, AccountingPeriod


class FinancialReport(TenantAwareModel):
    """
    Model for financial reports.
    """
    # Type choices
    TYPE_PROFIT_LOSS = 'profit_loss'
    TYPE_BALANCE_SHEET = 'balance_sheet'
    TYPE_CASH_FLOW = 'cash_flow'
    TYPE_TRIAL_BALANCE = 'trial_balance'
    TYPE_GENERAL_LEDGER = 'general_ledger'
    TYPE_CUSTOM = 'custom'
    
    TYPE_CHOICES = [
        (TYPE_PROFIT_LOSS, _('Profit & Loss')),
        (TYPE_BALANCE_SHEET, _('Balance Sheet')),
        (TYPE_CASH_FLOW, _('Cash Flow')),
        (TYPE_TRIAL_BALANCE, _('Trial Balance')),
        (TYPE_GENERAL_LEDGER, _('General Ledger')),
        (TYPE_CUSTOM, _('Custom')),
    ]
    
    # Status choices
    STATUS_DRAFT = 'draft'
    STATUS_GENERATED = 'generated'
    STATUS_ARCHIVED = 'archived'
    
    STATUS_CHOICES = [
        (STATUS_DRAFT, _('Draft')),
        (STATUS_GENERATED, _('Generated')),
        (STATUS_ARCHIVED, _('Archived')),
    ]
    
    report_number = models.CharField(_('report number'), max_length=50, unique=True)
    report_name = models.CharField(_('report name'), max_length=100)
    report_type = models.CharField(_('report type'), max_length=20, choices=TYPE_CHOICES)
    
    fiscal_year = models.ForeignKey(FiscalYear, on_delete=models.PROTECT, related_name='reports')
    accounting_period = models.ForeignKey(AccountingPeriod, on_delete=models.PROTECT, related_name='reports', null=True, blank=True)
    
    start_date = models.DateField(_('start date'))
    end_date = models.DateField(_('end date'))
    
    parameters = models.JSONField(_('parameters'), default=dict, blank=True)
    
    status = models.CharField(_('status'), max_length=20, choices=STATUS_CHOICES, default=STATUS_DRAFT)
    
    notes = models.TextField(_('notes'), blank=True)
    
    # Report data
    report_data = models.JSONField(_('report data'), default=dict, blank=True)
    
    # User information
    created_by = models.UUIDField(_('created by'))
    generated_by = models.UUIDField(_('generated by'), null=True, blank=True)
    generated_at = models.DateTimeField(_('generated at'), null=True, blank=True)
    
    class Meta:
        verbose_name = _('financial report')
        verbose_name_plural = _('financial reports')
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['tenant_id', 'report_type']),
            models.Index(fields=['tenant_id', 'fiscal_year']),
            models.Index(fields=['tenant_id', 'start_date', 'end_date']),
        ]
    
    def __str__(self):
        return f"{self.report_name} - {self.start_date} to {self.end_date}"


class ReportSchedule(TenantAwareModel):
    """
    Model for report schedules.
    """
    # Frequency choices
    FREQUENCY_DAILY = 'daily'
    FREQUENCY_WEEKLY = 'weekly'
    FREQUENCY_MONTHLY = 'monthly'
    FREQUENCY_QUARTERLY = 'quarterly'
    FREQUENCY_YEARLY = 'yearly'
    
    FREQUENCY_CHOICES = [
        (FREQUENCY_DAILY, _('Daily')),
        (FREQUENCY_WEEKLY, _('Weekly')),
        (FREQUENCY_MONTHLY, _('Monthly')),
        (FREQUENCY_QUARTERLY, _('Quarterly')),
        (FREQUENCY_YEARLY, _('Yearly')),
    ]
    
    # Status choices
    STATUS_ACTIVE = 'active'
    STATUS_INACTIVE = 'inactive'
    
    STATUS_CHOICES = [
        (STATUS_ACTIVE, _('Active')),
        (STATUS_INACTIVE, _('Inactive')),
    ]
    
    name = models.CharField(_('name'), max_length=100)
    report_type = models.CharField(_('report type'), max_length=20, choices=FinancialReport.TYPE_CHOICES)
    
    frequency = models.CharField(_('frequency'), max_length=20, choices=FREQUENCY_CHOICES)
    next_run_date = models.DateField(_('next run date'))
    
    parameters = models.JSONField(_('parameters'), default=dict, blank=True)
    
    recipients = models.JSONField(_('recipients'), default=list, blank=True)
    
    status = models.CharField(_('status'), max_length=20, choices=STATUS_CHOICES, default=STATUS_ACTIVE)
    
    # User information
    created_by = models.UUIDField(_('created by'))
    
    class Meta:
        verbose_name = _('report schedule')
        verbose_name_plural = _('report schedules')
        ordering = ['next_run_date', 'name']
    
    def __str__(self):
        return f"{self.name} - {self.get_report_type_display()} - {self.get_frequency_display()}"


class ReportTemplate(TenantAwareModel):
    """
    Model for report templates.
    """
    # Status choices
    STATUS_ACTIVE = 'active'
    STATUS_INACTIVE = 'inactive'
    
    STATUS_CHOICES = [
        (STATUS_ACTIVE, _('Active')),
        (STATUS_INACTIVE, _('Inactive')),
    ]
    
    name = models.CharField(_('name'), max_length=100)
    report_type = models.CharField(_('report type'), max_length=20, choices=FinancialReport.TYPE_CHOICES)
    
    description = models.TextField(_('description'), blank=True)
    
    template_data = models.JSONField(_('template data'), default=dict)
    
    status = models.CharField(_('status'), max_length=20, choices=STATUS_CHOICES, default=STATUS_ACTIVE)
    
    # User information
    created_by = models.UUIDField(_('created by'))
    
    class Meta:
        verbose_name = _('report template')
        verbose_name_plural = _('report templates')
        ordering = ['name']
        unique_together = ('tenant_id', 'name')
    
    def __str__(self):
        return f"{self.name} - {self.get_report_type_display()}"