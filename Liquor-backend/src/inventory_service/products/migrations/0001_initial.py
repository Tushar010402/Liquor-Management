# Generated by Django 4.2.10 on 2025-03-25 16:48

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("brands", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("code", models.CharField(max_length=20, verbose_name="code")),
                (
                    "barcode",
                    models.CharField(blank=True, max_length=50, verbose_name="barcode"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "mrp",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="MRP"
                    ),
                ),
                (
                    "selling_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="selling price"
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="purchase price"
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="tax rate",
                    ),
                ),
                (
                    "volume_ml",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="volume (ml)"
                    ),
                ),
                (
                    "weight_grams",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="weight (grams)"
                    ),
                ),
                (
                    "alcohol_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="alcohol percentage",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="product_images/",
                        verbose_name="image",
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(default=True, verbose_name="is available"),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="brands.brand",
                    ),
                ),
            ],
            options={
                "verbose_name": "product",
                "verbose_name_plural": "products",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductAttribute",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
            ],
            options={
                "verbose_name": "product attribute",
                "verbose_name_plural": "product attributes",
                "ordering": ["name"],
                "unique_together": {("tenant_id", "name")},
            },
        ),
        migrations.CreateModel(
            name="ProductType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
            ],
            options={
                "verbose_name": "product type",
                "verbose_name_plural": "product types",
                "ordering": ["name"],
                "unique_together": {("tenant_id", "name")},
            },
        ),
        migrations.CreateModel(
            name="ProductPriceHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                (
                    "mrp",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="MRP"
                    ),
                ),
                (
                    "selling_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="selling price"
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="purchase price"
                    ),
                ),
                ("effective_from", models.DateTimeField(verbose_name="effective from")),
                (
                    "effective_to",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="effective to"
                    ),
                ),
                (
                    "changed_by",
                    models.UUIDField(blank=True, null=True, verbose_name="changed by"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_history",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "product price history",
                "verbose_name_plural": "product price histories",
                "ordering": ["-effective_from"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="products.productcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "product category",
                "verbose_name_plural": "product categories",
                "ordering": ["name"],
                "unique_together": {("tenant_id", "name")},
            },
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="products",
                to="products.productcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="products",
                to="products.producttype",
            ),
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("code", models.CharField(max_length=20, verbose_name="code")),
                (
                    "barcode",
                    models.CharField(blank=True, max_length=50, verbose_name="barcode"),
                ),
                (
                    "mrp",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="MRP"
                    ),
                ),
                (
                    "selling_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="selling price"
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="purchase price"
                    ),
                ),
                (
                    "volume_ml",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="volume (ml)"
                    ),
                ),
                (
                    "weight_grams",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="weight (grams)"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="product_variant_images/",
                        verbose_name="image",
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(default=True, verbose_name="is available"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "product variant",
                "verbose_name_plural": "product variants",
                "ordering": ["name"],
                "unique_together": {("tenant_id", "code")},
            },
        ),
        migrations.CreateModel(
            name="ProductAttributeValue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("value", models.CharField(max_length=100, verbose_name="value")),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="products.productattribute",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attribute_values",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "product attribute value",
                "verbose_name_plural": "product attribute values",
                "ordering": ["attribute__name", "value"],
                "unique_together": {("product", "attribute")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("tenant_id", "code")},
        ),
    ]
