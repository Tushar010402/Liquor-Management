# Generated by Django 4.2.10 on 2025-03-25 16:48

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="StockAdjustment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("shop_id", models.UUIDField(db_index=True)),
                ("adjustment_date", models.DateField(verbose_name="adjustment date")),
                (
                    "adjustment_type",
                    models.CharField(
                        choices=[
                            ("physical_count", "Physical Count"),
                            ("damaged", "Damaged"),
                            ("expired", "Expired"),
                            ("lost", "Lost"),
                            ("found", "Found"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="adjustment type",
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="reference number"
                    ),
                ),
                (
                    "performed_by",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="performed by"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
            ],
            options={
                "verbose_name": "stock adjustment",
                "verbose_name_plural": "stock adjustments",
                "ordering": ["-adjustment_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StockTransfer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("shop_id", models.UUIDField(db_index=True)),
                ("source_shop_id", models.UUIDField(verbose_name="source shop ID")),
                (
                    "destination_shop_id",
                    models.UUIDField(verbose_name="destination shop ID"),
                ),
                ("transfer_date", models.DateField(verbose_name="transfer date")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_transit", "In Transit"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="reference number"
                    ),
                ),
                (
                    "initiated_by",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="initiated by"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
            ],
            options={
                "verbose_name": "stock transfer",
                "verbose_name_plural": "stock transfers",
                "ordering": ["-transfer_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StockTransferItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("shop_id", models.UUIDField(db_index=True)),
                ("quantity", models.PositiveIntegerField(verbose_name="quantity")),
                (
                    "received_quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="received quantity"
                    ),
                ),
                (
                    "is_received",
                    models.BooleanField(default=False, verbose_name="is received"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfer_items",
                        to="products.product",
                    ),
                ),
                (
                    "transfer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="stock.stocktransfer",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfer_items",
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "verbose_name": "stock transfer item",
                "verbose_name_plural": "stock transfer items",
                "ordering": ["product__name"],
            },
        ),
        migrations.CreateModel(
            name="StockTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("shop_id", models.UUIDField(db_index=True)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("purchase", "Purchase"),
                            ("sale", "Sale"),
                            ("return", "Return"),
                            ("adjustment", "Adjustment"),
                            ("transfer_in", "Transfer In"),
                            ("transfer_out", "Transfer Out"),
                            ("wastage", "Wastage"),
                            ("opening_stock", "Opening Stock"),
                        ],
                        max_length=20,
                        verbose_name="transaction type",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="quantity")),
                (
                    "reference_id",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="reference ID"
                    ),
                ),
                (
                    "reference_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="reference type"
                    ),
                ),
                (
                    "performed_by",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="performed by"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_transactions",
                        to="products.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_transactions",
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "verbose_name": "stock transaction",
                "verbose_name_plural": "stock transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StockAdjustmentItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("shop_id", models.UUIDField(db_index=True)),
                (
                    "previous_quantity",
                    models.PositiveIntegerField(verbose_name="previous quantity"),
                ),
                (
                    "new_quantity",
                    models.PositiveIntegerField(verbose_name="new quantity"),
                ),
                ("difference", models.IntegerField(verbose_name="difference")),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "adjustment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="stock.stockadjustment",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adjustment_items",
                        to="products.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adjustment_items",
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "verbose_name": "stock adjustment item",
                "verbose_name_plural": "stock adjustment items",
                "ordering": ["product__name"],
            },
        ),
        migrations.CreateModel(
            name="StockLevel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("tenant_id", models.UUIDField(db_index=True)),
                ("shop_id", models.UUIDField(db_index=True)),
                (
                    "current_stock",
                    models.PositiveIntegerField(
                        default=0, verbose_name="current stock"
                    ),
                ),
                (
                    "minimum_stock",
                    models.PositiveIntegerField(
                        default=10, verbose_name="minimum stock"
                    ),
                ),
                (
                    "maximum_stock",
                    models.PositiveIntegerField(
                        default=100, verbose_name="maximum stock"
                    ),
                ),
                (
                    "is_low_stock",
                    models.BooleanField(default=False, verbose_name="is low stock"),
                ),
                (
                    "is_out_of_stock",
                    models.BooleanField(default=False, verbose_name="is out of stock"),
                ),
                (
                    "last_stock_update",
                    models.DateTimeField(
                        auto_now=True, verbose_name="last stock update"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_levels",
                        to="products.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_levels",
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "verbose_name": "stock level",
                "verbose_name_plural": "stock levels",
                "ordering": ["product__name"],
                "unique_together": {("shop_id", "product", "variant")},
            },
        ),
    ]
