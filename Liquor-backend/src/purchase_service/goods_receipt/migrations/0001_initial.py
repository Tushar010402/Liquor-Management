# Generated by Django 4.2.10 on 2025-03-25 17:07

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("purchase_orders", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="GoodsReceipt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                (
                    "gr_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="GR number"
                    ),
                ),
                ("gr_date", models.DateField(verbose_name="GR date")),
                (
                    "po_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="PO number"
                    ),
                ),
                ("supplier_id", models.UUIDField(verbose_name="supplier ID")),
                (
                    "supplier_name",
                    models.CharField(max_length=200, verbose_name="supplier name"),
                ),
                (
                    "supplier_code",
                    models.CharField(max_length=50, verbose_name="supplier code"),
                ),
                ("delivery_date", models.DateField(verbose_name="delivery date")),
                (
                    "delivery_note_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="delivery note number"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="subtotal"
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="tax amount",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="discount amount",
                    ),
                ),
                (
                    "shipping_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="shipping amount",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total amount"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "internal_notes",
                    models.TextField(blank=True, verbose_name="internal notes"),
                ),
                ("created_by", models.UUIDField(verbose_name="created by")),
                (
                    "approved_by",
                    models.UUIDField(blank=True, null=True, verbose_name="approved by"),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="approved at"
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="rejection reason"),
                ),
                (
                    "is_synced",
                    models.BooleanField(default=True, verbose_name="is synced"),
                ),
                (
                    "sync_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="sync ID"
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="goods_receipts",
                        to="purchase_orders.purchaseorder",
                    ),
                ),
            ],
            options={
                "verbose_name": "goods receipt",
                "verbose_name_plural": "goods receipts",
                "ordering": ["-gr_date"],
            },
        ),
        migrations.CreateModel(
            name="GoodsReceiptItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                ("product_id", models.UUIDField(verbose_name="product ID")),
                (
                    "product_name",
                    models.CharField(max_length=200, verbose_name="product name"),
                ),
                (
                    "product_code",
                    models.CharField(max_length=50, verbose_name="product code"),
                ),
                (
                    "product_barcode",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="product barcode"
                    ),
                ),
                (
                    "variant_id",
                    models.UUIDField(blank=True, null=True, verbose_name="variant ID"),
                ),
                (
                    "variant_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="variant name"
                    ),
                ),
                (
                    "expected_quantity",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=10,
                        verbose_name="expected quantity",
                    ),
                ),
                (
                    "received_quantity",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        verbose_name="received quantity",
                    ),
                ),
                (
                    "accepted_quantity",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        verbose_name="accepted quantity",
                    ),
                ),
                (
                    "rejected_quantity",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=10,
                        verbose_name="rejected quantity",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="unit price"
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="tax rate",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="tax amount",
                    ),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="discount percentage",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="discount amount",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total amount"
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="batch number"
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(blank=True, null=True, verbose_name="expiry date"),
                ),
                (
                    "manufacturing_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="manufacturing date"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="rejection reason"),
                ),
                (
                    "goods_receipt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="goods_receipt.goodsreceipt",
                    ),
                ),
                (
                    "purchase_order_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="receipt_items",
                        to="purchase_orders.purchaseorderitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "goods receipt item",
                "verbose_name_plural": "goods receipt items",
                "ordering": ["product_name"],
            },
        ),
        migrations.CreateModel(
            name="QualityCheck",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                (
                    "check_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="check number"
                    ),
                ),
                ("check_date", models.DateField(verbose_name="check date")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("passed", "Passed"),
                            ("failed", "Failed"),
                            ("partially_passed", "Partially Passed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                ("checked_by", models.UUIDField(verbose_name="checked by")),
                (
                    "goods_receipt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quality_checks",
                        to="goods_receipt.goodsreceipt",
                    ),
                ),
            ],
            options={
                "verbose_name": "quality check",
                "verbose_name_plural": "quality checks",
                "ordering": ["-check_date"],
            },
        ),
        migrations.CreateModel(
            name="QualityCheckItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                ("product_id", models.UUIDField(verbose_name="product ID")),
                (
                    "product_name",
                    models.CharField(max_length=200, verbose_name="product name"),
                ),
                (
                    "quantity_checked",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="quantity checked"
                    ),
                ),
                (
                    "quantity_passed",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="quantity passed"
                    ),
                ),
                (
                    "quantity_failed",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="quantity failed"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("passed", "Passed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "failure_reason",
                    models.TextField(blank=True, verbose_name="failure reason"),
                ),
                (
                    "goods_receipt_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quality_checks",
                        to="goods_receipt.goodsreceiptitem",
                    ),
                ),
                (
                    "quality_check",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="goods_receipt.qualitycheck",
                    ),
                ),
            ],
            options={
                "verbose_name": "quality check item",
                "verbose_name_plural": "quality check items",
                "ordering": ["product_name"],
            },
        ),
        migrations.CreateModel(
            name="GoodsReceiptHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("updated", "Updated"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                        verbose_name="action",
                    ),
                ),
                (
                    "action_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="action date"),
                ),
                ("user_id", models.UUIDField(verbose_name="user ID")),
                (
                    "user_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="user name"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "goods_receipt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="goods_receipt.goodsreceipt",
                    ),
                ),
            ],
            options={
                "verbose_name": "goods receipt history",
                "verbose_name_plural": "goods receipt history",
                "ordering": ["-action_date"],
            },
        ),
        migrations.CreateModel(
            name="GoodsReceiptAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("tenant_id", models.UUIDField(verbose_name="tenant ID")),
                ("shop_id", models.UUIDField(verbose_name="shop ID")),
                (
                    "file",
                    models.FileField(
                        upload_to="goods_receipt_attachments/", verbose_name="file"
                    ),
                ),
                (
                    "file_name",
                    models.CharField(max_length=255, verbose_name="file name"),
                ),
                (
                    "file_type",
                    models.CharField(max_length=100, verbose_name="file type"),
                ),
                ("file_size", models.PositiveIntegerField(verbose_name="file size")),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="description"
                    ),
                ),
                ("uploaded_by", models.UUIDField(verbose_name="uploaded by")),
                (
                    "goods_receipt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="goods_receipt.goodsreceipt",
                    ),
                ),
            ],
            options={
                "verbose_name": "goods receipt attachment",
                "verbose_name_plural": "goods receipt attachments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="goodsreceipt",
            index=models.Index(
                fields=["tenant_id", "shop_id", "gr_date"],
                name="goods_recei_tenant__0fb31f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="goodsreceipt",
            index=models.Index(
                fields=["tenant_id", "shop_id", "status"],
                name="goods_recei_tenant__823d6e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="goodsreceipt",
            index=models.Index(
                fields=["tenant_id", "shop_id", "supplier_id"],
                name="goods_recei_tenant__f9fe1b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="goodsreceipt",
            index=models.Index(
                fields=["gr_number"], name="goods_recei_gr_numb_34cb78_idx"
            ),
        ),
    ]
