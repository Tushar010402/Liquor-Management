version: '3.8'

services:
  # Zookeeper - Required for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Database
  postgres:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=liquor_db
      - POSTGRES_USER=liquor_user
      - POSTGRES_PASSWORD=liquor_password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U liquor_user -d liquor_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth_service:
    build:
      context: ./Liquor-backend
      dockerfile: src/auth_service/Dockerfile
    volumes:
      - ./Liquor-backend/src/auth_service:/app
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-key-for-dev-only
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=liquor_db
      - DB_USER=liquor_user
      - DB_PASSWORD=liquor_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8001:8000"
    command: >
      sh -c "mkdir -p logs && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # Core Service
  core_service:
    build:
      context: ./Liquor-backend
      dockerfile: src/core_service/Dockerfile
    volumes:
      - ./Liquor-backend/src/core_service:/app
    depends_on:
      - postgres
      - redis
      - auth_service
      - kafka
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-key-for-dev-only
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=liquor_db
      - DB_USER=liquor_user
      - DB_PASSWORD=liquor_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8002:8000"
    command: >
      sh -c "mkdir -p logs && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # Inventory Service
  inventory_service:
    build:
      context: ./Liquor-backend
      dockerfile: src/inventory_service/Dockerfile
    volumes:
      - ./Liquor-backend/src/inventory_service:/app
    depends_on:
      - postgres
      - redis
      - core_service
      - kafka
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-key-for-dev-only
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=liquor_db
      - DB_USER=liquor_user
      - DB_PASSWORD=liquor_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8003:8000"
    command: >
      sh -c "mkdir -p logs && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # Sales Service
  sales_service:
    build:
      context: ./Liquor-backend
      dockerfile: src/sales_service/Dockerfile
    volumes:
      - ./Liquor-backend/src/sales_service:/app
    depends_on:
      - postgres
      - redis
      - inventory_service
      - kafka
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-key-for-dev-only
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=liquor_db
      - DB_USER=liquor_user
      - DB_PASSWORD=liquor_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8004:8000"
    command: >
      sh -c "mkdir -p logs && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # Purchase Service
  purchase_service:
    build:
      context: ./Liquor-backend
      dockerfile: src/purchase_service/Dockerfile
    volumes:
      - ./Liquor-backend/src/purchase_service:/app
    depends_on:
      - postgres
      - redis
      - inventory_service
      - kafka
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-key-for-dev-only
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=liquor_db
      - DB_USER=liquor_user
      - DB_PASSWORD=liquor_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8005:8000"
    command: >
      sh -c "mkdir -p logs && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # Accounting Service
  accounting_service:
    build:
      context: ./Liquor-backend
      dockerfile: src/accounting_service/Dockerfile
    volumes:
      - ./Liquor-backend/src/accounting_service:/app
    depends_on:
      - postgres
      - redis
      - sales_service
      - purchase_service
      - kafka
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-key-for-dev-only
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=liquor_db
      - DB_USER=liquor_user
      - DB_PASSWORD=liquor_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8006:8000"
    command: >
      sh -c "mkdir -p logs && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # Reporting Service
  reporting_service:
    build:
      context: ./Liquor-backend
      dockerfile: src/reporting_service/Dockerfile
    volumes:
      - ./Liquor-backend/src/reporting_service:/app
    depends_on:
      - postgres
      - redis
      - sales_service
      - inventory_service
      - purchase_service
      - accounting_service
      - kafka
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-key-for-dev-only
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=liquor_db
      - DB_USER=liquor_user
      - DB_PASSWORD=liquor_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8007:8000"
    command: >
      sh -c "mkdir -p logs && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

volumes:
  postgres_data:
  redis_data:
